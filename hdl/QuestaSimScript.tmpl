#!/bin/bash

set -eu -o pipefail

{{ $name := .Name }}
{{ $outDir := .OutDir }}
{{ $outScript := .OutScript }}
{{ $partName := .PartName }}
{{ $boardName := .BoardName }}
{{ $verbose := .Verbose }}
{{ $incDir := .IncDir }}

rm -rf {{ .OutDir }}
mkdir -p {{ .OutDir }}
TMPDIR=$(mktemp -d -t ci-XXXXXXXXXX)

(
    cd ${TMPDIR}

    {{ range .Ips }}
    NAME=`basename {{ . }} .xci`
    mkdir $NAME
    cd $NAME
    cp {{ . }} .

    cat > generate.tcl << EOF
set_part "{{ $partName }}"
set_property "board_part"         "{{ $boardName}}" [current_project]
set_property "target_language"    "Verilog"         [current_project]

set ip $NAME.xci
read_ip \$ip
generate_target simulation [get_files \$ip]
EOF

    {{ if $verbose }}
    vivado -mode batch -nolog -nojournal  -notrace -source generate.tcl
    find -type f
    {{ else }}
    vivado -mode batch -nolog -nojournal  -notrace -source generate.tcl | ( grep -E "^(ERROR|WARNING|CRITICAL)" || true )
    {{ end }}
    cd ..
    {{ end }}

    cp -af . {{ .OutDir }}
)

cat > {{ .OutScript }} <<EOF
#!/bin/bash
set -eu -o pipefail

vlib work
{{ range .Srcs }}vlog -svinputport=net +acc=rn -sv -nologo -quiet +incdir+{{ $incDir }} {{ . }}
{{ end }}
EOF

{{range .Ips}}
    NAME=`basename {{ . }} .xci`
    SIM=`find {{ $outDir }}/$NAME/sim -type f`
    SRCS=""
    if [ -d "{{ $outDir }}/$NAME/source" ]; then
        SRCS=`find {{ $outDir }}/$NAME/source -type f`
    fi

    for SRC in $SIM; do
        echo "vlog -svinputport=net +acc=rn -sv -nologo -quiet +incdir+{{ $incDir }} $SRC" >> {{ $outScript }}
    done
    for SRC in $SRCS; do
        echo "vlog -svinputport=net +acc=rn -sv -nologo -quiet +incdir+{{ $incDir }} $SRC" $SRC" >> {{ $outScript }}
    done
{{end}}

    XSIMDIR=`which xsim`
    XSIMIP=`dirname $XSIMDIR`/../data/xsim/ip/xsim_ip.ini
    GLBL=`dirname $XSIMDIR`/../data/verilog/src/glbl.v

    cat >> {{ .OutScript }} << EOF
vlog -svinputport=net +acc=rn -sv -nologo -quiet +incdir+{{ $incDir }} $GLBL

if [ \$# -ge 1 ]; then
    vsim -modelsimini {{ .LibDir }}/modelsim.ini {{range .Libs}}-L {{ . }} {{end}} work.board work.glbl "\$@"
else
    vsim -c -modelsimini {{ .LibDir }}/modelsim.ini {{range .Libs}}-L {{ . }} {{end}} work.board work.glbl -do {{ .OutSimScript }}
fi

EOF
chmod 755 {{ .OutScript }}

cat > {{ .OutSimScript }} << EOF
onfinish exit
run -all
EOF
